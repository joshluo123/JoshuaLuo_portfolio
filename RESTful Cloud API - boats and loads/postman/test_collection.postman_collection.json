{
	"info": {
		"_postman_id": "20719756-2893-4cec-90ec-5235391f36a9",
		"name": "portfolio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "view all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user's boats - no boats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"boat_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Sea Witch\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Catamaran\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(28);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Catamaran\",\r\n    \"length\": 28\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Catamaran\",\r\n    \"length\": 28\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat - invalid auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Catamaran\",\r\n    \"length\": 28\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat - no body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat - missing attribute",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Catamaran\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a boat - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Catamaran\",\r\n    \"length\": 28\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Boat 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tb1_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tb1_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Test Boat 1\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Sailboat\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(10);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.response.json()[\"id\"]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Boat 1\",\r\n    \"type\": \"Sailboat\",\r\n    \"length\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Boat 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tb2_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tb2_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Test Boat 2\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Sailboat\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(20);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.response.json()[\"id\"]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Boat 2\",\r\n    \"type\": \"Sailboat\",\r\n    \"length\": 20\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Boat 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tb3_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tb3_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Test Boat 3\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Sailboat\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(30);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.response.json()[\"id\"]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Boat 3\",\r\n    \"type\": \"Sailboat\",\r\n    \"length\": 30\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Boat 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tb4_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tb4_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Test Boat 4\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Sailboat\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(40);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.response.json()[\"id\"]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Boat 4\",\r\n    \"type\": \"Sailboat\",\r\n    \"length\": 40\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Boat 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tb5_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tb5_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Test Boat 5\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Sailboat\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(50);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.response.json()[\"id\"]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Boat 5\",\r\n    \"type\": \"Sailboat\",\r\n    \"length\": 50\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Boat 6 - user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tb6_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tb6_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Test Boat 6\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Sailboat\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(60);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id2\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.response.json()[\"id\"]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test Boat 6\",\r\n    \"type\": \"Sailboat\",\r\n    \"length\": 60\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user's boats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"boat_next_url\", pm.response.json()[\"next\"]);\r",
							"\r",
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"boats\"].length).to.equal(5);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user2's boats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"boats\"].length).to.equal(1);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user's boats - next page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"boats\"].length).to.equal(1);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{boat_next_url}}",
					"host": [
						"{{boat_next_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user's boats - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user's boats - invalid auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user's boats - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "/boats - bad req method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "COPY",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "view one of user's boats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Sea Witch\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Catamaran\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(28);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view one of user's boats - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view one of user's boats - invalid auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view one of user's boats - not owner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view one of user's boats - invalid boat_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view one of user's boats - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Patched Sea Witch\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Catamaran\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(28);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Patched Sea Witch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat - no body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Patched Sea Witch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat - invalid auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Patched Sea Witch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{invalid_jwt}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_jwt}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat - edit id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"Patched Sea Witch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat - not owner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Stolen by User2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat - invalid boat_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Patched Sea Witch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch boat - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Patched Sea Witch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Sea Witch\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Yacht\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(100);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - no body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - missing attribute",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - invalid auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{invalid_jwt}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_jwt}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - edit id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - not owner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Stolen by User2\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - invalid boat_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put boat - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Sea Witch\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat - no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat - invalid auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat - not owner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat - invalid boat_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Boat 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Boat 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb2_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Boat 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb3_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Boat 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb4_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb4_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Boat 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb5_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb5_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user's boats - after deleting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"boats\"].length).to.equal(0);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Boat 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb6_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb6_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all user'2 s boats - after deleting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"boats\"].length).to.equal(0);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "/boats/:boat_id - bad req method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "COPY",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all loads - no loads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"load_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(100);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Racquets\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"12/1/2021\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 100,\r\n    \"content\": \"Tennis Racquets\",\r\n    \"creation_date\": \"12/1/2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load - no body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load - missing attribute",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 100,\r\n    \"content\": \"Tennis Racquets\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a load - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 100,\r\n    \"content\": \"Tennis Racquets\",\r\n    \"creation_date\": \"12/1/2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Load 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tl1_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tl1_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(10);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Test Load 1\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"1/1/1111\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"tl1_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 10,\r\n    \"content\": \"Test Load 1\",\r\n    \"creation_date\": \"1/1/1111\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Load 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tl2_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tl2_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(20);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Test Load 2\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"2/2/2222\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"tl2_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 20,\r\n    \"content\": \"Test Load 2\",\r\n    \"creation_date\": \"2/2/2222\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Load 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tl3_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tl3_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(30);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Test Load 3\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"3/3/3333\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"tl3_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 30,\r\n    \"content\": \"Test Load 3\",\r\n    \"creation_date\": \"3/3/3333\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Load 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tl4_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tl4_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(40);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Test Load 4\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"4/4/4444\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"tl4_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 40,\r\n    \"content\": \"Test Load 4\",\r\n    \"creation_date\": \"4/4/4444\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Test Load 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tl5_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tl5_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(50);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Test Load 5\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"5/5/5555\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"tl5_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 50,\r\n    \"content\": \"Test Load 5\",\r\n    \"creation_date\": \"5/5/5555\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all loads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"load_next_url\", pm.response.json()[\"next\"]);\r",
							"\r",
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(5);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all loads- next page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(1);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{load_next_url}}",
					"host": [
						"{{load_next_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all loads - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "/loads - bad req method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "COPY",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "view a load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(100);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Racquets\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"12/1/2021\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view a load - invalid load_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view a load - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(50);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Racquets\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"10/26/1993\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 50,\r\n    \"creation_date\": \"10/26/1993\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch load - no body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch load - edit id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"volume\": 50,\r\n    \"creation_date\": \"10/26/1993\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch load - invalid load_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 50,\r\n    \"creation_date\": \"10/26/1993\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch load - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 50,\r\n    \"creation_date\": \"10/26/1993\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(99);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Shoes\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"12/4/2021\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 99,\r\n    \"content\": \"Tennis Shoes\",\r\n    \"creation_date\": \"12/4/2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put load - no body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put load - missing attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 1000,\r\n    \"creation_date\": \"12/4/2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put load - edit id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"volume\": 99,\r\n    \"content\": \"Tennis Shoes\",\r\n    \"creation_date\": \"12/4/2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put load - invalid load_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 99,\r\n    \"content\": \"Tennis Shoes\",\r\n    \"creation_date\": \"12/4/2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put load - no Accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 99,\r\n    \"content\": \"Tennis Shoes\",\r\n    \"creation_date\": \"12/4/2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete load- invalid load_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Load 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{tl1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{tl1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Load 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{tl2_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{tl2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Load 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{tl3_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{tl3_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Load 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{tl4_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{tl4_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete Test Load 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{tl5_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{tl5_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view all loads - after deleting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(0);\r",
							"    pm.expect(pm.response.json()[\"total\"]).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "/loads/:load_id - bad req method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "COPY",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create boat 1 to assign load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"boat_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Carrier Boat 1\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Cargo Ship\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(1000);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Carrier Boat 1\",\r\n    \"type\": \"Cargo Ship\",\r\n    \"length\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "create load 1 to assign boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"load_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(100);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Balls\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"11/8/1995\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 100,\r\n    \"content\": \"Tennis Balls\",\r\n    \"creation_date\": \"11/8/1995\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign load to boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view boat w/ load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Carrier Boat 1\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Cargo Ship\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(1000);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(1);\r",
							"    pm.expect(pm.response.json()[\"loads\"][0][\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"][0][\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view load w/ carrier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(100);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Balls\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"11/8/1995\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"][\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"carrier\"][\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign load to boat - load already assigned",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign load to boat - invalid boat_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign load to boat - invalid load_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign load to boat - invalid boat and load ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}",
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat - invalid boat_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat - invalid load_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat - invalid boat and load ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{invalid_id}}/loads/{{invalid_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{invalid_id}}",
						"loads",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create boat 2 w/ no load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tb1_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tb1_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Empty Boat\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Yacht\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(1000);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id2\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"tb1_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Empty Boat\",\r\n    \"type\": \"Yacht\",\r\n    \"length\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/boats",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat - boat not loaded",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb1_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb1_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create load 2 with no carrier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"tl1_id\", pm.response.json()[\"id\"]);\r",
							"\r",
							"pm.test(\"201 status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"tl1_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(100);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Balls\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"11/8/1995\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"tl1_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"volume\": 100,\r\n    \"content\": \"Tennis Balls\",\r\n    \"creation_date\": \"11/8/1995\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/loads",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat - load not carried",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{tl1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{tl1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat - empty boat and load not carried",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb1_id}}/loads/{{tl1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb1_id}}",
						"loads",
						"{{tl1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load from boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view boat w/ load removed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Carrier Boat 1\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Cargo Ship\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(1000);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view load w/ carrier removed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"volume\"]).to.equal(100);\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.equal(\"Tennis Balls\");\r",
							"    pm.expect(pm.response.json()[\"creation_date\"]).to.equal(\"11/8/1995\");\r",
							"    pm.expect(pm.response.json()[\"carrier\"]).to.be.null;\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign load 1 to boat 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign load 2 to boat 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{tl1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{tl1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view boat 1 w/ 2 loads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Carrier Boat 1\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Cargo Ship\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(1000);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(2);\r",
							"    pm.expect(pm.response.json()[\"loads\"][0][\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"][0][\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"][1][\"id\"]).to.equal(pm.environment.get(\"tl1_id\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"][1][\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"tl1_id\"));\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load 2 from boat 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{tl1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{tl1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view boat 1 w/ load 2 removed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Carrier Boat 1\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Cargo Ship\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(1000);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(1);\r",
							"    pm.expect(pm.response.json()[\"loads\"][0][\"id\"]).to.equal(pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"][0][\"self\"]).to.equal(pm.environment.get(\"url\") + \"/loads/\" + pm.environment.get(\"load_id\"));\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove load 1 from boat 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "view boat 1 w/ load 1 removed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"id\"]).to.equal(pm.environment.get(\"boat_id\"));\r",
							"    pm.expect(pm.response.json()[\"name\"]).to.equal(\"Carrier Boat 1\");\r",
							"    pm.expect(pm.response.json()[\"type\"]).to.equal(\"Cargo Ship\");\r",
							"    pm.expect(pm.response.json()[\"length\"]).to.equal(1000);\r",
							"    pm.expect(pm.response.json()[\"owner\"]).to.equal(pm.environment.get(\"user_id1\"));\r",
							"    pm.expect(pm.response.json()[\"loads\"]).to.be.empty\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.equal(pm.environment.get(\"url\") + \"/boats/\" + pm.environment.get(\"boat_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{boat_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boats/{{tb1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boats",
						"{{tb1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete load 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete load 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/loads/{{tl1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{tl1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/boats/:boat_id/loads/:load_id - bad req method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "COPY",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/loads/{{load_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}